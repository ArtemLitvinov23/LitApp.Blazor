@page "/account/reset-password"

<MudContainer Style="display: block; position: center; top: 200; bottom: 0; left: 0; right: 0; width: 400px; height: 200px; margin: auto; ">
    <h1 class="card-header">Reset password</h1>
    <EditForm Model="@forgotPassword" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Token" Class="mt-3"
                              @bind-Value="forgotPassword.Token" For="@(() => forgotPassword.Token)" HelperText="Enter token from received message" />
                <MudTextField Label="Password" Class="mt-3"
                              @bind-Value="forgotPassword.Password" For="@(() => forgotPassword.Password)" HelperText="Choose a strong password" InputType="InputType.Password" />
                <MudTextField Label="Confirm Password" Class="mt-3"
                              @bind-Value="forgotPassword.ConfirmPassword" For="@(() =>forgotPassword.ConfirmPassword)" HelperText="Repeat the password" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Size=Size.Large Class="ml-auto">Save changed</MudButton>
                <MudSpacer />
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick=@(()=>Login()) Color="Color.Warning" Size=Size.Small Class="ml-auto">Cancel</MudButton>
            </MudCardActions>
            <MudSpacer />
            <MudProgressLinear Color="Color.Primary" Indeterminate=loading />
        </MudCard>
        @if (!string.IsNullOrEmpty(error))
        {
            <div class="alert alert-danger mt-3 mb-0">@error</div>
        }
    </EditForm>
</MudContainer>>
@code {
    private Models.ResetPassword forgotPassword = new();
    private string error;
    private bool loading;

    protected void Login()
    {
        _navigationManager.NavigateTo("/account/login");
    }
    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {

            await _accountService.ResetPassword(forgotPassword);
            _navigationManager.NavigateTo("/account/login");
        }
        catch (Exception ex)
        {
            loading = false;
            error = ex.Message;
            StateHasChanged();
        }
    }
}
